name: backend
on:
  push:
    branches:
      - master
    paths:
      - backend/**
      - .github/workflows/backend.yml
      - Dockerfile.backend
  pull_request:
    branches:
      - master
    paths:
      - backend/**
      - .github/workflows/backend.yml
      - Dockerfile.backend
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - name: Test
        run: |
          sudo apt update && sudo apt install ffmpeg libavcodec-dev libavutil-dev libavformat-dev libswscale-dev
          cd $GITHUB_WORKSPACE/backend && go test -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
          cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "_mock.go" > $GITHUB_WORKSPACE/profile.cov
      - name: Install golangci-lint and goveralls
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.32.0
          GO111MODULE=off go get -u -v github.com/mattn/goveralls
      - name: Lint
        run: cd $GITHUB_WORKSPACE/backend && $GITHUB_WORKSPACE/golangci-lint run --modules-download-mode=readonly
      - name: Submit coverage
        run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/profile.cov
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v2
      - name: Set env variables
        run: |
          echo "TAG=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV
          echo "REPOSITORY=${REPOSITORY:-$GITHUB_REPOSITORY}" >> $GITHUB_ENV
          echo "DOCKER_USER=${DOCKER_USER:-$GITHUB_ACTOR}" >> $GITHUB_ENV
        env:
          REPOSITORY: ${{ secrets.REPOSITORY }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
      - name: Build image
        run: |
          docker build --build-arg VERSION=$GITHUB_REF:$GITHUB_SHA -t ghcr.io/$REPOSITORY-api -f Dockerfile.backend .
      - name: Publish image
        if: github.ref == 'refs/heads/master'
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u $DOCKER_USER --password-stdin
          docker tag ghcr.io/$REPOSITORY-api ghcr.io/$REPOSITORY-api:$TAG
          docker push ghcr.io/$REPOSITORY-api
  deploy:
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Set env variables
        run: |
          echo "DOCKER_USER=${DOCKER_USER:-$GITHUB_ACTOR}" >> $GITHUB_ENV
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
      - name: Deploy
        run: |
          DIGITALOCEAN_CLUSTER_IP=$(doctl compute droplet get ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }} --template {{.PublicIPv4}})
          ssh-keyscan $DIGITALOCEAN_CLUSTER_IP >> $HOME/.ssh/known_hosts
          doctl compute ssh ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }} --ssh-command " \
            echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u $DOCKER_USER --password-stdin
            docker-compose -f infra/docker-compose.s2.yml pull video-thumbnail-api; \
            docker-compose -f infra/docker-compose.s2.yml up -d video-thumbnail-api; \
          "


